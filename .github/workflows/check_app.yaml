name: Check Black & Install

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create isolated working directory
        run: |
          PYTHON_VERSION="${{ matrix.python-version }}"
          WORKDIR="work-$PYTHON_VERSION"
          mkdir -p "$WORKDIR"
          cd "$WORKDIR"

          # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã
          cp ../run.py ./
          cp ../dbpatch.py ./
          cp ../create_user.py ./
          cp ../backuper.py ./
          cp ../requirements.txt ./
          cp ../config_example.py config.py

          # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          cp -r ../app ./
          cp -r ../supervisor ./supervisor 2>/dev/null || echo "supervisor/ not found, skipping."

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
          if [ ! -f "run.py" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: run.py –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!"
            exit 1
          fi
          if [ ! -d "app" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è app/ –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!"
            exit 1
          fi
          echo "‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ $WORKDIR"

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-venv postgresql nginx openssl netcat-openbsd

      - name: Start PostgreSQL
        run: sudo systemctl start postgresql

      - name: Setup DB and run app in isolated env
        run: |
          PYTHON_VERSION="${{ matrix.python-version }}"
          WORKDIR="work-$PYTHON_VERSION"
          cd "$WORKDIR"

          # –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
          python -m venv venv
          source venv/bin/activate

          # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π –≤–µ—Ä—Å–∏–∏ Python
          export DB_NAME="nabs_db_py${PYTHON_VERSION//./}"
          export DB_USER="nabs_user_py${PYTHON_VERSION//./}"
          export DB_PASSWORD=$(openssl rand -base64 14)
          export APP_PORT=$((5000 + 10 * $(echo $PYTHON_VERSION | cut -d'.' -f2)))

          echo "[+] –ò—Å–ø–æ–ª—å–∑—É–µ–º: DB=$DB_NAME, USER=$DB_USER, PORT=$APP_PORT"

          # –°–æ–∑–¥–∞—ë–º –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          sudo -u postgres psql -c "DROP DATABASE IF EXISTS $DB_NAME;"
          sudo -u postgres psql -c "DROP USER IF EXISTS $DB_USER;"
          sudo -u postgres psql -c "CREATE DATABASE $DB_NAME;"
          sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"

          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
          pip install --upgrade pip
          pip install -r requirements.txt

          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º config.py
          sed -i "s|DBPassword *= *\".*\"|DBPassword = \"$DB_PASSWORD\"|g" config.py

          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
          nohup python run.py > app.log 2>&1 &
          sleep 15

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ª–∏ —Å–µ—Ä–≤–µ—Ä
          if nc -z 127.0.0.1 $APP_PORT; then
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $APP_PORT"
          else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É $APP_PORT"
            echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
            tail -n 30 app.log
            exit 1
          fi

      - name: Verify server response
        run: |
          PYTHON_VERSION="${{ matrix.python-version }}"
          APP_PORT=$((5000 + 10 * $(echo $PYTHON_VERSION | cut -d'.' -f2)))
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP-–æ—Ç–≤–µ—Ç (–æ–∂–∏–¥–∞–µ–º 200, 302 –∏–ª–∏ 401 ‚Äî –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
          if curl -f -v http://127.0.0.1:$APP_PORT; then
            echo "‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ HTTP-–∑–∞–ø—Ä–æ—Å—ã"
          else
            echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            # –ü–æ–∫–∞–∂–µ–º –ª–æ–≥–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è
            WORKDIR="work-$PYTHON_VERSION"
            cat "$WORKDIR/app.log" | tail -n 50
            exit 1
          fi
